{-|

Core of the int type.

# Equality
@docs Equal (==), NoEqual (!=)

# Comparison
@docs LessThan (<), LessEqual (<=), GreaterThan, GreaterEqual

# Arithmethics
@docs Negate, Add, Sub, Mul, Div, Mod, Rem

-}

type int : i32

impl Equateable<int>
    fun Equal(x, y): bool
        #wasm
            (i32.eq $x $y)
    fun Unequal(x, y): bool
        #wasm
            (i32.ne $x $y)

impl Comparable<int>
    fun LessThan(x, y): bool
        #wasm
            (i32.lt_s $x $y)
    fun LessEqqual(x, y): bool
        #wasm
            (i32.le_s $x $y)
    fun GreateThan(x, y): bool
        #wasm
            (i32.gt_s $x $y)
    fun GreateEqual(x, y): bool
        #wasm
            (i32.ge_s $x $y)

fn Negate(int x) : int

fn Add(int x, int y) : int
fn Sub(int x, int y) : int
fn Mul(int x, int y) : int
fn Div(int x, int y) : int
fn Mod(int x, int y) : int
fn Rem(int x, int y) : int

fn Equals(int x, int y) : bool
fn NotEquals(int x, int y) : bool

fn LessThan(x: int, y: int) : bool
fn LessEqual(x: int, y: int) : Bool
fn GreateThan(x: int, y: int) : Bool
fn GreateEqual(x: int, y: int) : Bool
